name: Workflow A - Trigger and Fetch Output from Workflow B

on:
  workflow_dispatch:
    inputs:
      smoke_tests:
        description: 'Run Smoke Tests? (yes or no)'
        required: true
        default: 'no'

jobs:
  trigger-and-fetch-results:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Conditional step: Check if smoke tests should be run
      - name: Check Input for Smoke Tests
        id: check_input
        run: |
          if [ "${{ github.event.inputs.smoke_tests }}" != "yes" ]; then
            echo "Smoke tests input is 'no', skipping the tests."
          fi
          echo "Proceeding without smoke tests."

      - name: Trigger Workflow B
        if: ${{ github.event.inputs.smoke_tests == 'yes' }}
        id: trigger_b
        run: |
          echo "Triggering Workflow B..."
          curl -X POST -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/workflow-b.yml/dispatches" \
            -d '{"ref": "master"}'
          echo "Workflow B triggered."

      - name: Wait for Workflow B to Complete
        if: ${{ github.event.inputs.smoke_tests == 'yes' }}
        id: wait_for_b
        run: |
          echo "Waiting for Workflow B to complete..."
          sleep 10

          while true; do
            workflow_runs=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs")

            run_id=$(echo "$workflow_runs" | jq -r '.workflow_runs[] | select(.name == "Workflow B") | .id' | head -n 1)

            if [ -z "$run_id" ]; then
              echo "No recent Workflow B runs found. Retrying..."
              sleep 5
              continue
            fi

            status=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id" \
              | jq -r '.status')

            echo "Workflow B Status: $status"

            if [ "$status" == "completed" ]; then
              echo "::set-output name=run_id::$run_id"
              break
            fi

            sleep 5
          done

      - name: Download Artifact from Workflow B
        if: ${{ github.event.inputs.smoke_tests == 'yes' }}
        id: download_artifact
        run: |
          echo "Fetching Artifact from Workflow B..."

          # Fetch Workflow B Run ID
          run_id=${{ steps.wait_for_b.outputs.run_id }}

          # Get Artifact URL
          artifacts_url=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/artifacts" \
            | jq -r '.artifacts[] | select(.name=="test-results") | .archive_download_url')

          if [ -z "$artifacts_url" ]; then
            echo "Artifact not found!"
            exit 1
          fi

          # Download and Extract Artifact
          curl -sL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o artifact.zip "$artifacts_url"
          unzip artifact.zip
          cat results.json

      - name: Parse JSON and Print Failed & Flaky Values
        if: ${{ github.event.inputs.smoke_tests == 'yes' }}
        id: parse_results
        run: |
          echo "Parsing JSON output..."
          passed_count=$(jq -r '.Passed' results.json)
          failed_count=$(jq -r '.Failed' results.json)
          flaky_count=$(jq -r '.Flaky' results.json)

          echo "Passed Test Count: $passed_count"
          echo "Failed Test Count: $failed_count"
          echo "Flaky Test Count: $flaky_count"

          echo "::set-output name=passed::$passed_count"
          echo "::set-output name=failed::$failed_count"
          echo "::set-output name=flaky::$flaky_count"

      - name: Send Slack Notification if Failed > 0
        if: ${{ github.event.inputs.smoke_tests == 'yes' }} && ${{ steps.parse_results.outputs.failed > 0 }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          echo "Sending Slack Notification..."
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "🚨 *Test Results Alert* 🚨\n
            *Passed:* ${{ steps.parse_results.outputs.passed }}\n
            *Failed:* ${{ steps.parse_results.outputs.failed }} ❌\n
            *Flaky:* ${{ steps.parse_results.outputs.flaky }} ⚠️\n
            *Repository:* ${{ github.repository }}\n
            *Triggered by:* ${{ github.actor }}"
          }' "$SLACK_WEBHOOK_URL"

      - name: Fail Workflow if Failed > 0
        if: ${{ github.event.inputs.smoke_tests == 'yes' }} && ${{ steps.parse_results.outputs.failed > 0 }}
        run: |
          echo "Test failures detected! Failing the workflow."
          exit 1

      # Install jq for JSON parsing
      - name: Finalize Output
        run: echo "Workflow Completed"
